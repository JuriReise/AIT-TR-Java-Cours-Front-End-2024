Favicon

Favicon (сокращение от favorite icon) — это маленькая иконка, которая отображается на вкладке браузера рядом с названием сайта, в закладках или при добавлении сайта на домашний экран мобильного устройства. Размеры стандартного favicon обычно 16x16 или 32x32 пикселей.

Пример подключения favicon:

<link rel="shortcut icon" href="favicon.ico" type="image/x-icon" />

Favicon улучшает узнаваемость сайта и помогает пользователям быстрее его находить среди множества открытых вкладок.
Псевдоэлементы ::before и ::after

Псевдоэлементы ::before и ::after используются для добавления контента до или после содержимого элемента. Они часто применяются для стилистических целей, таких как декоративные элементы, или для улучшения доступности сайта.
Синтаксис

.element::before {
  content: "До содержимого";
  color: red;
}

.element::after {
  content: "После содержимого";
  color: blue;
}

Особенности:

    Свойство content обязательно. Оно определяет, какой контент будет добавлен (текст, изображения, пустое значение и т.д.).
    Эти псевдоэлементы являются дочерними элементами, и их можно стилизовать, как обычные блоки: добавлять фон, размеры, отступы и т.д.
    Используются для украшения или добавления вспомогательных элементов, не влияя на основную разметку.

Пример:

button::before {
  content: "✨";
  margin-right: 8px;
}
button::after {
  content: "→";
  margin-left: 8px;
}

position: sticky

Свойство position: sticky — это гибрид relative и fixed. Оно позволяет элементу "прилипать" к определённой позиции при скролле, но только в рамках своего контейнера.
Синтаксис:

.sticky {
  position: sticky;
  top: 10px; /* Задаёт расстояние от верхней границы экрана */
}

Особенности:

    Элемент остаётся на месте, пока находится в зоне видимости родительского элемента.
    Работает только в сочетании со значениями top, right, bottom, left.
    Не выходит за пределы родительского элемента, когда его область прокрутки заканчивается.

Пример:

.header {
  position: sticky;
  top: 0; /* "Прилипает" к верхней границе окна браузера */
  background-color: white;
  z-index: 1000;
}

Селектор > (для прямых потомков)

Селектор > используется для выбора только прямых потомков указанного элемента.
Синтаксис:

.parent > .child {
  color: red;
}

Пример:

<div class="parent">
  <div class="child">Прямой потомок</div>
  <div>
    <div class="child">Не прямой потомок</div>
  </div>
</div>

В этом случае будет выделен красным только элемент с текстом "Прямой потомок".
Селектор для всех потомков

Селектор пробел ( ) используется для выбора всех потомков элемента, независимо от уровня вложенности.
Синтаксис:

.parent .descendant {
  color: green;
}

Пример:

<div class="parent">
  <div>
    <div class="descendant">Любой потомок</div>
  </div>
</div>

В этом случае выделится любой элемент с классом descendant, который является потомком .parent.
Media Queries

Media Queries — это CSS-метод, который используется для создания адаптивного веб-дизайна, который подстраивается под разные устройства и размеры экранов. Этот инструмент позволяет применять разные стили в зависимости от ширины окна браузера, высоты, разрешения экрана и других характеристик устройства.

Пример использования media queries:

/* Для экранов шириной до 768px */
@media (max-width: 768px) {
  body {
    background-color: lightgray;
  }
}

/* Для экранов шириной до 480px */
@media (max-width: 480px) {
  body {
    background-color: lightblue;
  }
}
